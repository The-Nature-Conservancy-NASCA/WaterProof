# This is the main geogeonode conf

charset     utf-8;

# max upload size
client_max_body_size 100G;

# compression
gzip on;
gzip_proxied any;
gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    application/javascript
    application/x-javascript
    application/json;

# Geoserver
location /geoserver {

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream geoserver:8080;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header X-Frame-Options;

    proxy_pass http://$upstream;
}

# proxy reverse to wfapp_models
location /wf-models {

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream wfapp_py3:8000;
    proxy_pass http://$upstream;
}

# proxy reverse to wf-rios
location /wf-rios {

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream wfapp_py2:5050;
    proxy_pass http://$upstream;
}

# proxy reverse to mapserver
location /srv{

    set $upstream $http_host:82;

    proxy_pass http://$upstream;
}

# proxy reverse to Flower
location /flower{

    set $upstream $http_host:5556;

    proxy_set_header  Host $http_host;
    proxy_redirect off;

    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass http://$upstream;
}

# Django media
location /uploaded  {
    alias /spcwaterproof-media;  # your Django project's media files - amend as required
    include  /etc/nginx/mime.types;
    expires 365d;
}

location /static {
    alias /spcwaterproof-static; # your Django project's static files - amend as required
    include  /etc/nginx/mime.types;
    expires 365d;
}

location /inputs{
   alias /spcwaterproof-inputs/; 
   index index.html; 
   autoindex on;
}

location /outputs{
   alias /spcwaterproof-outputs/; 
   index index.html; 
   autoindex on;
}

# Finally, send all non-media requests to the Django server.
location / {
    # uwsgi_params
    include /etc/nginx/uwsgi_params;

    # Using a variable is a trick to let Nginx start even if upstream host is not up yet
    # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
    set $upstream django:8000;

    proxy_set_header  Host $http_host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Frame-Options ALLOWALL;

    uwsgi_pass $upstream;

    # when a client closes the connection then keep the channel to uwsgi open. Otherwise uwsgi throws an IOError
    uwsgi_ignore_client_abort on;
}
